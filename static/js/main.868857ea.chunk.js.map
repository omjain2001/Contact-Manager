{"version":3,"sources":["components/pages/about.js","components/layout/Header.js","Context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/textInputGroup.js","components/contacts/AddContacts.js","components/contacts/EditContact.js","components/pages/notFound.js","App.js","serviceWorker.js","index.js"],"names":["About","className","Header","props","branding","href","to","defaultProps","Context","React","createContext","reducer","state","action","type","contacts","filter","ele","id","payload","map","contact","Provider","dispatch","setState","axios","get","res","this","data","value","children","Component","Consumer","Contact","showInfo","deleteContact","a","delete","name","email","phone","onClick","style","cursor","float","color","bind","marginRight","Contacts","Fragment","key","classname","require","TextInputGroup","label","placeholder","onChange","error","htmlFor","AddContacts","errors","e","target","console","log","submit","preventDefault","newContact","post","history","push","onSubmit","EditContact","match","params","patch","updatedContact","App","exact","path","component","notFound","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.868857ea.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const About = () => {\r\n  return (\r\n    <div className=\"ml-5\">\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home mr-1\" />\r\n                Home\r\n              </Link>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question mr-1\" />\r\n                About\r\n              </Link>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/addContact\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus mr-1\" />\r\n                Add\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\n// CSS Styles in react are written in camelCase form\r\n\r\n/*\r\nconst headingStyle = {\r\n  color: \"orange\",\r\n  fontSize: \"20px\",\r\n  textTransform: \"uppercase\",\r\n};\r\n*/\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired,\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"--------\",\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component, useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\": {\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter((ele) => ele.id !== action.payload),\r\n      };\r\n    }\r\n\r\n    case \"ADD_CONTACT\": {\r\n      return {\r\n        ...state,\r\n        contacts: [...state.contacts, action.payload],\r\n      };\r\n    }\r\n\r\n    case \"UPDATE_CONTACT\": {\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((contact) =>\r\n          contact.id === action.payload.id ? action.payload : contact\r\n        ),\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n\r\n    dispatch: (action) => {\r\n      this.setState({ ...reducer(this.state, action) });\r\n    },\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Consumer } from \"../../Context\";\r\nimport axios from \"axios\";\r\n\r\nclass Contact extends Component {\r\n  //   static propTypes = {\r\n  //       contactNo: PropTypes.string.isRequired\r\n  //   }\r\n\r\n  state = { showInfo: false };\r\n\r\n  deleteContact = async (id, dispatch) => {\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    dispatch({\r\n      type: \"DELETE_CONTACT\",\r\n      payload: id,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}{\" \"}\r\n                <i\r\n                  onClick={() => {\r\n                    this.setState({ showInfo: !this.state.showInfo });\r\n                  }}\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                  onClick={this.deleteContact.bind(this, id, dispatch)}\r\n                />\r\n                <Link to={`editContact/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      float: \"right\",\r\n                      color: \"black\",\r\n                      marginRight: \"1rem\",\r\n                    }}\r\n                  ></i>\r\n                </Link>\r\n              </h4>\r\n\r\n              {this.state.showInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">\r\n                    <b>Email</b> : {email}\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    <b>Contact No</b> : {phone}\r\n                  </li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\n// We can also write this as static attribute in the class itself.\r\n\r\nContact.defaultProps = {\r\n  phone: \"36698552147\",\r\n};\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../Context\";\r\n\r\nclass Contacts extends Component {\r\n  // constructor() {\r\n  //   super();\r\n  //   this.state = {\r\n  //     contacts: [\r\n  //       {\r\n  //         id: 1,\r\n  //         name: \"Om Prasanna Jain\",\r\n  //         email: \"omjain2606@gmail.com\",\r\n  //         phone: 8275481040,\r\n  //       },\r\n\r\n  //       {\r\n  //         id: 2,\r\n  //         name: \"Mahima Prasanna Jain\",\r\n  //         email: \"jainmahi1998@gmail.com\",\r\n  //         phone: 9405814787,\r\n  //       },\r\n\r\n  //       {\r\n  //         id: 3,\r\n  //         name: \"Yogita Prasanna Jain\",\r\n  //         email: \"yogitajainjalgaon@gmail.com\",\r\n  //         phone: 8275481040,\r\n  //       },\r\n  //     ],\r\n  //   };\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              {contacts.map((ele) => (\r\n                <Contact key={ele.id} contact={ele} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst classname = require(\"classnames\");\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  type,\r\n  name,\r\n  placeholder,\r\n  value,\r\n  onChange,\r\n  error,\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classname(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error,\r\n        })}\r\n        placeholder={placeholder}\r\n        onChange={onChange}\r\n        value={value}\r\n      />\r\n\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\",\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../Context\";\r\nimport TextInputGroup from \"../layout/textInputGroup\";\r\n// import { v4 as uuidv4 } from \"uuid\";\r\nimport axios from \"axios\";\r\n\r\nclass AddContacts extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {},\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n    console.log(this.state);\r\n  };\r\n\r\n  submit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone, errors } = this.state;\r\n    if (name === \"\") {\r\n      this.setState({\r\n        errors: { name: \"Name is required\" },\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (email === \"\") {\r\n      this.setState({\r\n        errors: { email: \"Email is required\" },\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (phone === \"\") {\r\n      this.setState({\r\n        errors: { phone: \"Phone is required\" },\r\n      });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n\r\n    const res = await axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n\r\n    dispatch({\r\n      type: \"ADD_CONTACT\",\r\n      payload: res.data,\r\n    });\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {},\r\n    });\r\n\r\n    this.props.history.push(\"/\"); // history attribute in props\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.submit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    onChange={this.onChange}\r\n                    value={name}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    onChange={this.onChange}\r\n                    value={email}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone...\"\r\n                    onChange={this.onChange}\r\n                    value={phone}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-light  btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContacts;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../Context\";\r\nimport TextInputGroup from \"../layout/textInputGroup\";\r\n// import { v4 as uuidv4 } from \"uuid\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {},\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n    console.log(this.state);\r\n  };\r\n\r\n  submit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone, errors } = this.state;\r\n    if (name === \"\") {\r\n      this.setState({\r\n        errors: { name: \"Name is required\" },\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (email === \"\") {\r\n      this.setState({\r\n        errors: { email: \"Email is required\" },\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (phone === \"\") {\r\n      this.setState({\r\n        errors: { phone: \"Phone is required\" },\r\n      });\r\n      return;\r\n    }\r\n\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const newContact = {\r\n      ...res.data,\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n\r\n    const updatedContact = await axios.patch(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      newContact\r\n    );\r\n\r\n    dispatch({\r\n      type: \"UPDATE_CONTACT\",\r\n      payload: updatedContact.data,\r\n    });\r\n\r\n    // this.setState({\r\n    //   name: \"\",\r\n    //   email: \"\",\r\n    //   phone: \"\",\r\n    //   errors: {},\r\n    // });\r\n\r\n    this.props.history.push(\"/\"); // history attribute in props\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n    const { name, email, phone } = res.data;\r\n    this.setState({\r\n      name,\r\n      email,\r\n      phone,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.submit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    onChange={this.onChange}\r\n                    value={name}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    onChange={this.onChange}\r\n                    value={email}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone...\"\r\n                    onChange={this.onChange}\r\n                    value={phone}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-light  btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404</span>NOT FOUND\r\n      </h1>\r\n      <p className=\"lead\">Sorry, page does not exist</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport { About } from \"./components/pages/about\";\nimport Header from \"./components/layout/Header\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContacts from \"./components/contacts/AddContacts\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport notFound from \"./components/pages/notFound\";\nimport { Provider } from \"./Context\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/addContact\" component={AddContacts} />\n              <Route exact path=\"/editContact/:id\" component={EditContact} />\n              <Route component={notFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}